% MATLAB Script to Calculate Young's Modulus from CSV Data
close all
filenames = {'CSVs4-1/1-10_2_1.csv', 'CSVs4-1/1-10_3_1.csv' ...
    , 'CSVs4-1/1-20_1_1.csv', 'CSVs4-1/1-20_2_1.csv', ...
    'CSVs4-1/1-33_1_1.csv', 'CSVs4-1/1-33_2_1.csv'}; 

titles = {'1-10 1', '1-10 2', '1-20 1', '1-20 2', '1-33 1', '1-33 2'};
ts = 10^-3*[3.047, 2.947, 3.040, 2.986, 2.965, 2.999]; 
ws = 10^-3*[6.145, 6.118, 6.136, 6.063, 6.155, 6.068];
gauge_length = 25; % Initial length (mm)

for i = 1:length(filenames)
    get_E(filenames{i}, ts(i)*ws(i), gauge_length, titles{i})
end

%%
function get_E(filename, area, gauge_length, title_text)
    % Load CSV file (update filename if needed)
    opts = detectImportOptions(filename, 'NumHeaderLines', 8); % Skip initial text rows
    data = readtable(filename, opts);
    
    displacement = data{:, 3}; % Displacement (mm)
    force = data{:, 4}; % Force (N)
    
    % Calculate strain 
    strain = (displacement - displacement(1)) / gauge_length;
    
    % Calculate stress
    stress = force / area; % N/mm² = MPa
    
    % Identify the linear region (usually ~0-10% strain)
    linear_region = strain < 0.1; % Modify if needed
    
    % Perform linear fit in the elastic region
    p = polyfit(strain(linear_region), stress(linear_region), 1)
    youngs_modulus = p(1)*10^-6; % Young’s modulus (MPa)
    
    % Display result
    fprintf('Young''s Modulus: %.5f MPa\n', youngs_modulus);

    disp('filename: ' + string(filename))
    
    % Plot Stress-Strain Curve
    figure;
    plot(strain, stress, 'bo-', 'MarkerSize', 5, 'LineWidth', 1.5);
    hold on;
    plot(strain(linear_region), polyval(p, strain(linear_region)), 'r-', 'LineWidth', 2);
    xlabel('Strain');
    ylabel('Stress (MPa)');
    new_title = title_text + ", E: " + string(youngs_modulus) + " MPa";
    title(new_title);
    legend('Experimental Data', 'Linear Fit');
    grid on;
end